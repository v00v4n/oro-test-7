# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.command_chain.chains_list:
        - [foo:hello, bar:hi]
#        - [debug:autowiring, debug:container] # you can register several command chains
#        - [bar:hi, foo:hello] # throws Exception: already exists in another chain

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Bundle/ChainCommandBundle/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

#    App\ALlEventsListener:
#        tags:
#            - { name: kernel.event_listener, event: console.command, priority: 1024 }
#            - { name: kernel.event_listener, event: kernel.request, priority: 1024 }

#    App\Bundle\ChainCommandBundle\CommandChain\CommandChain:
#        public: true

    logger:
        class: Symfony\Component\HttpKernel\Log\Logger
        arguments:
#            $minLevel: info
            $output: "%kernel.logs_dir%/%kernel.environment%.log"

    app.command_chain:
        class: App\Bundle\ChainCommandBundle\CommandChain\CommandChain
        public: true
        shared: false
        arguments:
            $logger: '@app.command_chain.logger'

    app.command_chain.logger:
        parent: logger
        class: Symfony\Component\HttpKernel\Log\Logger
        arguments:
            $minLevel: info
            $output: "%kernel.logs_dir%/%kernel.environment%.chain-command.log"
            $formatter:
                - '@app.command_chain.log_formatter'
                - formatLog

    app.command_chain.log_formatter:
        class: App\Bundle\ChainCommandBundle\CommandChain\LogFormatter
